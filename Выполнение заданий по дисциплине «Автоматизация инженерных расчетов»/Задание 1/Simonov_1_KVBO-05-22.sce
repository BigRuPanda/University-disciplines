//КВБО-05-22 Симонов Вадим Евгеньевич Вариант 32

// Задание 2
x = 1/2 + 0.81 * sin(0.5);
format('e', 16);x
format('v', 16);x

y = cos(%pi / 2) + 5 * sin(%pi / 3) + 2 * cos(5 / 4);
format('e', 16);y
format('v', 16);y

z = (x + y) / 2;
format('e', 16);z
format('v', 16);z

// Задание 3
V1 = [3; 7; 24; 9]
V2 = [22, 8, 16, 5]
V3 = [0 2 4 6 8 10 12 14 16]
A = [6 4 32 5; 8 9 33 6; 24 36 13 2; 37 11 15 40]
B = [38 6 3 2; 1 6 22 27; 6 3 9 5; 1 2 3 4]

// Задание 4
// Проведите вычисления с введёнными матрицами
summ = (A + B) // Сложить матрицы A и B
umn = 4*A // Умножить матрицу A на скаляр
matrUmn = A*B // Умножить матрицу A на матрицу B применив матричное умножение
poelUmn = A.*B // Умножить матрицу A на матрицу B применив поэлементное умножение
vecMatrUmn = V2*A // Умножить вектор V2 на матрицу A
matrVecUmn = B*V1// Умножить матрицу B на вектор V1
delSlevPrav = A/B // Разделить матрицу A на матрицу B слева направо
delSpravLev = A\B // Разделить матрицу A на матрицу B справа налево
step2 = B^2 // Возвести во вторую степень матрицу B
poelStep2 = B.^2 // Возвести во вторую степень все элементы матрицы B

// Задание 5
// Для матрицы A вычислить
transA = A' // транспонированную матрицу
oprA = det(A) // определитель матрицы
obrA = inv(A) // обратную матрицу
diagA = diag(A) // главную диагональ
sumStolb = sum(A,1) // сумму по столбцам
sumStr = sum(A,2) // сумму по строкам
semElem = sum(A) // сумму всех элементов матрицы
umnStolb = prod(A,1) // произведение элементов в столбцах
umnStr = prod(A,2) // произведение элементов в строках
umnElem = prod(A) // произведение всех элементов матрицы
minElStr = min(A, 'c') // минимальный элемент в строке
minElStolb = min(A, 'r') // минимальный элемент в столбце
maxElStr = max(A, 'c') // максимальный элемент в строке
maxElStolb = max(A, 'r') //максимальный элемент в столбце
minA = min(A) // минимальный элемент
maxA = max(A) // максимальный элемент
slA = trace(A) // след матрицы
razmA = size(A) // размер матрицы

// Задание 6
R = rand(5, 3) * 12 - 8
C = round(rand(6, 6)*42)
C1 = C([1 2 3 4 5], [3 4 5]) // Выделение
C2 = C;
C2(:,6) = [] // Удаление
C3 = C([1 2 3 5 4 6],:) // Замена

// Задание 7
N = [-1 9 7 -8; -4 9 -1 0; 5 -3 5 0; -12 -5 -5 -4]
M = [16; 8; 2; -10]
// Решение с помощью обратной матрицы
x = inv(N)*M
// Решение с помощью метода Крамера
N1 = N; 
N1(:,1) = M; // 1 вспомогательная матрица
N2 = N; 
N2(:,2) = M; // 2 вспомогательная матрица
N3 = N; 
N3(:,3) = M; // 3 вспомогательная матрица
N4 = N; 
N4(:,4) = M; // 4 вспомогательная матрица
D = det(N);
d(1) = det(N1);
d(2) = det(N2);
d(3) = det(N3);
d(4) = det(N4);
x = d/D
// Решение с помощью метода Гауссаs
L = rref([N M]);
[n, m] = size(L);
x = L(:,m)
p = N*x // Проверка









































